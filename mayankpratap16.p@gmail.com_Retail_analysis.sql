--Question 1. Which channel is most frequently used for transactions? 

SELECT TOP 1 STORE_TYPE,COUNT(TRANSACTION_ID) AS frequently_used_CHANNEL
FROM TRANSACTIONS
GROUP BY STORE_TYPE
ORDER BY COUNT(TRANSACTION_ID) DESC

--Question 2. What is the count of Male and Female customers in the database?

SELECT GENDER,COUNT(GENDER) AS GENDER_Count FROM Customer
WHERE GENDER IN ('F','M')
GROUP BY GENDER

--Question 3. From which city do we have the maximum number of customers and how many? 

SELECT TOP 1 city_code,COUNT(CUSTOMER_ID) AS Max_CUSTOMER FROM CUSTOMER
GROUP BY city_code
ORDER BY COUNT(CUSTOMER_ID)  DESC

--Question 4. How many sub-categories are there under the Books category? 

SELECT PROD_CAT,COUNT(PROD_SUBCAT) AS SUBCAT_number FROM PROD_CAT_INFO
WHERE PROD_CAT IN ('Books')
GROUP BY PROD_CAT

--Question 5. What is the maximum quantity of products ever ordered? 

WITH PROD_COUNT AS (
SELECT PROD_CAT_CODE, PROD_SUBCAT_CODE, COUNT(TRANSACTION_ID) AS PROD_COUNT FROM TRANSACTIONS
GROUP BY PROD_CAT_CODE , PROD_SUBCAT_CODE
)
SELECT TOP 1 T1.*,T2.PROD_COUNT  FROM PROD_CAT_INFO AS T1
INNER JOIN PROD_COUNT AS T2
ON T1.PROD_CAT_CODE = T2.PROD_CAT_CODE AND T1.PROD_SUB_CAT_CODE = T2.PROD_SUBCAT_CODE
ORDER BY PROD_COUNT DESC


--Question 6. What is the net total revenue generated in categories Electronics and Books? 

SELECT PROD_CAT,SUM(ABS(TOTAL_AMT)-ABS(TAX)) AS REV_GEN FROM TRANSACTIONS AS T1
LEFT JOIN PROD_CAT_INFO AS T2
ON T1.PROD_CAT_CODE = T2.PROD_CAT_CODE AND T1.PROD_SUBCAT_CODE = T2.PROD_SUB_CAT_CODE
WHERE QTY>0 AND PROD_CAT IN ('Electronics','Books')
GROUP BY PROD_CAT

--Question 7. How many customers have >10 transactions with us, excluding returns?

select CUST_ID, COUNT(TRANSACTION_ID) AS #_TRANS from transactions
WHERE QTY>0
GROUP BY CUST_ID
HAVING COUNT(TRANSACTION_ID) > 10

-- Question 8. What is the combined revenue earned from the “Electronics” & “Clothing”
--    categories, from “Flagship stores”? 

SELECT store_type,PROD_CAT,SUM(ABS(TOTAL_AMT)-ABS(TAX)) AS REV_GEN FROM TRANSACTIONS AS T1
LEFT JOIN PROD_CAT_INFO AS T2
ON T1.PROD_CAT_CODE = T2.PROD_CAT_CODE AND T1.PROD_SUBCAT_CODE = T2.PROD_SUB_CAT_CODE
WHERE QTY>0 AND PROD_CAT IN ('Electronics','Clothing') AND STORE_TYPE IN ('Flagship store')
GROUP BY store_type, PROD_CAT;

--Question 9. What is the total revenue generated from “Male” customers in “Electronics”
--   category? Output should display total revenue by prod sub-cat.

SELECT GENDER,PROD_CAT,PROD_SUBCAT,SUM(ABS(TOTAL_AMT)-ABS(TAX)) AS REV_GEN 
FROM TRANSACTIONS AS T1
LEFT JOIN Customer AS T2
ON T1.CUST_ID = T2.customer_Id
LEFT JOIN PROD_CAT_INFO AS T3
ON T1.PROD_CAT_CODE = T3.PROD_CAT_CODE AND T1.PROD_SUBCAT_CODE = T3.PROD_SUB_CAT_CODE
WHERE Gender IN ('M') AND PROD_CAT IN ('Electronics')
GROUP BY GENDER,PROD_CAT,PROD_SUBCAT;

--Question 10.What is percentage of sales and returns by product sub category; display only top
--   5 sub categories in terms of sales? 

SELECT *
FROM prod_cat_info AS T1
INNER JOIN Transactions AS T2
ON T1.prod_cat_code = T2.prod_cat_code AND T1.prod_sub_cat_code=T2.prod_subcat_code


--11. For all customers aged between 25 to 35 years find what is the net total revenue
--    generated by these consumers in last 30 days of transactions from max transaction
--    date available in the data?


with new_tran_tb as (
SELECT T1.*,CONVERT(date,tran_date,103)AS tran_date_new ,T2.DOB,CONVERT(date,DOB,103)AS DOB_NEW
FROM TRANSACTIONS as T1
JOIN Customer AS T2
ON T1.CUST_ID = T2.customer_Id
),
MAX_DATE_TB AS (
select *,
max(tran_date_new) over (partition by cust_id ) as max_date
from new_tran_tb
),
AGE_TB AS (
SELECT *,DATEDIFF(YEAR,DOB_NEW,GETDATE()) AS AGE,DATEDIFF(DAY,TRAN_DATE_NEW,MAX_DATE) AS TRAN_DAYS
FROM MAX_DATE_TB
),
LAST_30_DAYS_TRANS_TB AS (
SELECT CUST_ID,ABS(TOTAL_AMT)-TAX AS REV_GEN,AGE,TRAN_DAYS
FROM AGE_TB
WHERE AGE >=25 AND AGE <=35 AND TRAN_DAYS<=30 AND TRAN_DAYS >0 AND QTY>0
)
SELECT CUST_ID,AGE,SUM(REV_GEN) AS TOTAL_REV
FROM LAST_30_DAYS_TRANS_TB
GROUP BY CUST_ID,AGE

--Question 12.Which product category has seen the max value of returns in the last 3 months of
--   transactions?


WITH NEW_TRAN_TB AS (
SELECT T1.*,T2.PROD_CAT,T2.PROD_SUBCAT ,CONVERT(DATE,TRAN_DATE,103)AS NEW_TRAN_DATE
FROM TRANSACTIONS AS T1
LEFT JOIN PROD_CAT_INFO AS T2
ON T1.PROD_CAT_CODE = T2.PROD_CAT_CODE AND T1.PROD_SUBCAT_CODE = T2.PROD_SUB_CAT_CODE
),
MAX_TRAN_DATE AS (
SELECT *,
MAX(NEW_TRAN_DATE) OVER (PARTITION BY CUST_ID) AS MAX_TRAN_DATE
FROM NEW_TRAN_TB
),
TO_GET_LAST_3MONTH_TRAN AS(
SELECT *,DATEDIFF(DAY,NEW_TRAN_DATE,MAX_TRAN_DATE) AS NUM_DAYS FROM MAX_TRAN_DATE
)

SELECT TOP 1 PROD_CAT, SUM(ABS(QTY)) AS _TOTAL_QTY
FROM TO_GET_LAST_3MONTH_TRAN
WHERE NUM_DAYS<=90 AND NUM_DAYS>0 AND QTY<0
GROUP BY PROD_CAT
ORDER BY SUM(ABS(QTY)) DESC


--Question 13.Which store-type sells the maximum products; by value of sales amount and by
--   quantity sold? 


WITH MAX_REV AS (
SELECT TOP 1 STORE_TYPE,SUM(ABS(TOTAL_AMT)) AS MAX_REV_GEN
FROM TRANSACTIONS
WHERE QTY>0
GROUP BY STORE_TYPE
ORDER BY SUM(ABS(TOTAL_AMT)) DESC
),
MAX_QTY_SOLD AS (
SELECT TOP 1 STORE_TYPE,SUM(ABS(QTY)) AS MAX_QTY_SOLD
FROM TRANSACTIONS
WHERE QTY>0
GROUP BY STORE_TYPE
ORDER BY SUM(ABS(QTY)) DESC
)
SELECT * FROM MAX_REV AS T1
JOIN MAX_QTY_SOLD AS T2
ON T1.STORE_TYPE = T2.STORE_TYPE

--Question 14.What are the categories for which average revenue is above the overall average.

WITH AVG_REV_TB AS (
SELECT T2.PROD_CAT,AVG(ABS(TOTAL_AMT)) AS AVG_REV
FROM TRANSACTIONS AS T1
LEFT JOIN PROD_CAT_INFO AS T2
ON T1.PROD_CAT_CODE = T2.PROD_CAT_CODE AND T1.PROD_SUBCAT_CODE = T2.PROD_SUB_CAT_CODE
WHERE QTY > 0
GROUP BY PROD_CAT
)

SELECT * FROM AVG_REV_TB 
WHERE AVG_REV > (SELECT AVG(ABS(TOTAL_AMT)) FROM TRANSACTIONS WHERE QTY>0);

--Question 15. Find the average and total revenue by each subcategory for the categories which
--    are among top 5 categories in terms of quantity sold. 

WITH AVG_TB AS (
SELECT PROD_CAT,PROD_SUBCAT,ROUND(AVG(abs(TOTAL_AMT)),2) AS AVG_REV, ROUND(SUM(abs(TOTAL_AMT)),2) AS TOTAL_REV
FROM TRANSACTIONS AS T1
LEFT JOIN PROD_CAT_INFO AS T2
ON T1.PROD_CAT_CODE = T2.PROD_CAT_CODE AND T1.PROD_SUBCAT_CODE = T2.PROD_SUB_CAT_CODE
WHERE QTY>0
GROUP BY PROD_CAT,PROD_SUBCAT
),
QTY_SOLD_TB AS (
SELECT TOP 5 PROD_CAT,SUM(ABS(QTY)) AS QTY_SOLD
FROM TRANSACTIONS AS T1
LEFT JOIN PROD_CAT_INFO AS T2
ON T1.PROD_CAT_CODE = T2.PROD_CAT_CODE AND T1.PROD_SUBCAT_CODE = T2.PROD_SUB_CAT_CODE
WHERE QTY>0
GROUP BY PROD_CAT
ORDER BY SUM(ABS(QTY)) DESC
)

SELECT T1.* FROM AVG_TB AS T1
INNER JOIN QTY_SOLD_TB AS T2
ON T1.prod_cat=T2.prod_cat
ORDER BY QTY_SOLD DESC;
